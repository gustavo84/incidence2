{
  "swagger" : "2.0",
  "info" : {
    "description" : "Sample Api use case user",
    "version" : "1.0.0",
    "title" : "Swaggeruserstore",
    "termsOfService" : "http://helloreverb.com/terms/",
    "contact" : {
      "name" : "Swagger API team",
      "url" : "http://swagger.io",
      "email" : "hasncan@hanscan.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "http://opensource.org/licenses/MIT"
    }
  },
  "host" : "172.17.0.1:8243",
  "basePath" : "/v0/1.0.0",
  "schemes" : [ "https", "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/users" : {
      "get" : {
        "description" : "Returns all users from the system that the user has access to",
        "operationId" : "findusers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tags",
          "in" : "query",
          "description" : "tags to filter by",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum number of results to return",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "user response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/user"
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/errorModel"
            }
          }
        },
        "x-mediation-script" : "var tags = mc.getProperty('uri.var.tags');\nvar limit = mc.getProperty('uri.var.limit');\n\nmc.setPayloadJSON('[{ \"userId\" : \"7\",\"nombre\":\"hanscanpa\"},{ \"userId\" : \"7\",\"nombre\":\"hanscanpa\"},{ \"userId\" : \"7\",\"nombre\":\"hanscanpa\"},{ \"userId\" : \"7\",\"nombre\":\"hanscanpa\"},{ \"userId\" : \"7\",\"nombre\":\"hanscanpa\"}]')"
      },
      "post" : {
        "description" : "Creates a new user in the store.  Duplicates are allowed",
        "operationId" : "adduser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "description" : "user to add to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/newuser"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/user"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "description" : "Returns a user based on a single ID, if the user does not have access to the user",
        "operationId" : "finduserById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of user to fetch",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/user"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/errorModel"
            }
          }
        },
        "x-mediation-script" : "var ids = mc.getProperty('uri.var.id');\nmc.setPayloadJSON('{ \"userId\" : '+ids+',\"nombre\":\"hanscanpa\"}')\n\n\n\n"
      },
      "delete" : {
        "description" : "deletes a single user based on the ID supplied",
        "operationId" : "deleteuser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of user to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "user deleted"
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/errorModel"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "newuser" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tag" : {
          "type" : "string"
        }
      }
    },
    "errorModel" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "user" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tag" : {
          "type" : "string"
        }
      }
    }
  }
}
